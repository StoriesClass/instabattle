apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {
    // Just in case
    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/INDEX.LIST'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    compileSdkVersion 30
    defaultConfig {
        applicationId "me.instabattle.app"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        debug {
            buildConfigField "String", "BASE_URL", "\"https://instabattle2.herokuapp.com/\""
            ext.alwaysUpdateBuildId = false // for Crashlytics
        }
        release {
            buildConfigField "String", "BASE_URL", "\"https://instabattle2.herokuapp.com/\""
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

    // FIXME what is it I don't even...
    flavorDimensions 'mode'
    productFlavors {
        development {
            dimension 'mode'
            resConfigs("en", "xxhdpi")
        }
    }
    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.3.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.1.0'

    implementation 'com.cloudinary:cloudinary-android:1.30.0'

    testImplementation 'junit:junit:4.13.1'
    //testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'

    implementation "com.chibatching.kotpref:kotpref:2.4.0"
    //implementation "com.chibatching.kotpref:enum-support:2.4.0"
    //implementation "com.chibatching.kotpref:initializer:2.4.0"
    implementation "com.chibatching.kotpref:gson-support:2.4.0"

    //implementation('com.github.hotchemi:permissionsdispatcher:3.1.0') { exclude module: 'support-v13' }
    //kapt 'com.github.hotchemi:permissionsdispatcher-processor:3.1.0'

    implementation 'com.otaliastudios:cameraview:1.5.0'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'

    testImplementation 'org.robolectric:robolectric:4.4'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    implementation 'com.evernote:android-state:1.4.1'
    kapt 'com.evernote:android-state-processor:1.4.1'

    kapt 'androidx.databinding:databinding-compiler:4.1.1'

    def lifecycle_version = "2.2.0"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    // Paging
    //implementation "android.arch.paging:runtime:1.0.0-alpha6"

    // Test helpers for LiveData
    //testImplementation "android.arch.core:core-testing:1.1.0"
}
repositories {
    mavenCentral()
}

// Ensure the no-op dependency is always used in JVM tests.
configurations.all { config ->
    if (config.name.contains('UnitTest')) {
        config.resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
            }
        }
    }
}